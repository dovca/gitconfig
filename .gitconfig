[alias]
	a = add
	aa = add -A .
	b = branch
	bd = branch -D
	c = checkout
	cb = checkout -b
	cm = commit -am
	cma = commit -a --amend
	d = diff
	ds = diff --staged
	f = fetch
	g = log --all --oneline --graph
	hf = !git c hotfix && git c master && git pl && git m --no-edit hotfix && git ps && git c devel && git pl && git m --no-edit hotfix && git ps && git bd hotfix
	hfc = !git c master && git pl && git cb hotfix
	m = merge --no-ff
	mf = !git c devel && git pl && git m - --no-edit && git ps
	md = !git c test && git pl && git m devel --no-edit && git ps
	mt = !git c master && git pl && git m test --no-edit && git ps 
	mfd = !git mf && git md
	mfdt = !git mf && git md && git mt
	pf = push -f
	pl = pull -r
	po = push origin
	ps = !git pu || ( git pl && git pu )
	pu = push -u origin HEAD
	pr = "!alias_git_pr() {\
		usage () { echo \"usage: git pr [-b <target>] [-t <title>] [<reviewers>...]\"; };\
			local dst=\"devel\";\
			local src=$(git rev-parse --abbrev-ref HEAD);\
			local title=\"Merge $src into $dst\";\
			while getopts \":b:t:h\" o; do\
				case \"$o\" in\
					b) dst=$OPTARG; title=\"Merge $src into $dst\";;\
					t) title=$OPTARG;;\
					h) usage; return 0;;\
					*) usage; return 1;;\
				esac;\
			done;\
			shift $((OPTIND-1));\
			git ps && \
			curl https://api.bitbucket.org/2.0/repositories/$BITBUCKET_TEAMNAME/$(basename $(git rev-parse --show-toplevel))/pullrequests\
				-s\
				-u \"$BITBUCKET_USERNAME:$BITBUCKET_PASSWORD\"\
				-H 'Content-Type: application/json'\
				-d '{\
					\"title\":\"'\"$title\"'\",\
					\"source\":{\
						\"branch\":{\
							\"name\":\"'\"$src\"'\"\
						}\
					},\
					\"destination\":{\
						\"branch\":{\
							\"name\":\"'\"$dst\"'\"\
						}\
					},\
					\"reviewers\":[\
						'$(echo -n $@|awk 'BEGIN{RS=\" \"}{print\"{\\\"username\\\":\\\"\"$1\"\\\"}\"}'|paste -sd,)'\
					]\
				}'\
				| jq -r '.links.html.href // .error.message';\
		};\
		alias_git_pr"
	rb = rebase
	rba = rebase --abort
	rbc = rebase --continue
	rbd = rebase devel
	rbm = rebase master
	rbt = rebase test
	r = reset
	rh = reset --hard
	rhh = reset --hard HEAD^
	rpo = remote prune origin
	s = status
	ss = stash save
	sp = stash pop
	t = tag

